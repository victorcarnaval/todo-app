{"version":3,"sources":["components/TodoForm.js","components/Todo.js","components/TodoList.js","App.js","index.js"],"names":["TodoForm","props","useState","edit","value","text","setText","inputRef","useRef","useLayoutEffect","current","focus","handleChange","e","target","className","onSubmit","preventDefault","id","Math","floor","random","type","placeholder","name","onChange","ref","autoComplete","Todo","todos","updateTodo","removeTodo","completeTodo","setEdit","map","todo","isComplete","onClick","TodoList","setTodos","newTodos","todoId","newTodo","prev","item","filter","updatedTodos","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mOA8DeA,MA5Df,SAAkBC,GAAQ,IAAD,EACGC,mBAASD,EAAME,KAAOF,EAAME,KAAKC,MAAQ,IAD5C,mBACdC,EADc,KACRC,EADQ,KAEfC,EAAWC,iBAAO,MAExBC,2BAAgB,WACZF,EAASG,QAAQC,WAGrB,IAAMC,EAAe,SAAAC,GACjBP,EAAQO,EAAEC,OAAOV,QAcrB,OACI,sBAAMW,UAAU,YAAYC,SAZX,SAAAH,GACjBA,EAAEI,iBAEFhB,EAAMe,SAAS,CACXE,GAAIC,KAAKC,MAAsB,IAAhBD,KAAKE,UACpBhB,KAAMA,IAGVC,EAAQ,KAIR,SACKL,EAAME,KAEC,qCACI,uBACImB,KAAK,OACLC,YAAY,mBACZnB,MAAOC,EACPmB,KAAK,OACLT,UAAU,kBACVU,SAAUb,EACVc,IAAKnB,EACLoB,aAAa,QAEjB,wBAAQZ,UAAU,mBAAlB,uBAIJ,qCACI,uBACIO,KAAK,OACLC,YAAY,aACZnB,MAAOC,EACPmB,KAAK,OACLT,UAAU,aACVU,SAAUb,EACVc,IAAKnB,EACLoB,aAAa,QAEjB,wBAAQZ,UAAU,cAAlB,4B,eCLTa,MA7Cf,YAAgE,IAAhDC,EAA+C,EAA/CA,MAAOC,EAAwC,EAAxCA,WAAYC,EAA4B,EAA5BA,WAAYC,EAAgB,EAAhBA,aAAgB,EACnC9B,mBAAS,CAC7BgB,GAAI,KACJd,MAAO,KAHgD,mBACpDD,EADoD,KAC9C8B,EAD8C,KAe3D,OAAI9B,EAAKe,GACE,cAAC,EAAD,CAAUf,KAAMA,EAAMa,SAVZ,SAAAZ,GACjB0B,EAAW3B,EAAKe,GAAId,GAEpB6B,EAAQ,CACJf,GAAI,KACJd,MAAO,QAQRyB,EAAMK,KAAI,SAAAC,GAAI,OACjB,sBAEIpB,UAAWoB,EAAKC,WAAa,oBAAsB,WAFvD,UAII,qBAAKC,QAAS,kBAAML,EAAaG,EAAKjB,KAAtC,SACKiB,EAAK9B,OAEV,sBAAKU,UAAU,QAAf,UACI,cAAC,IAAD,CACIsB,QAAS,kBAAMN,EAAWI,EAAKjB,KAC/BH,UAAU,cAFd,mBAMA,cAAC,IAAD,CACIsB,QAAS,kBAAMJ,EAAQ,CAAEf,GAAIiB,EAAKjB,GAAId,MAAO+B,EAAK9B,QAClDU,UAAU,YAFd,uBAbCoB,EAAKjB,QC6BPoB,MAnDf,WAAqB,IAAD,EACUpC,mBAAS,IADnB,mBACT2B,EADS,KACFU,EADE,KAqChB,OACI,sBAAKxB,UAAU,YAAf,UACI,4DACA,cAAC,EAAD,CAAUC,SArCF,SAAAmB,GACZ,GAAKA,EAAK9B,KAAV,CAIA,IAAMmC,EAAQ,CAAIL,GAAJ,mBAAaN,IAC3BU,EAASC,OAgCL,cAAC,EAAD,CACIX,MAAOA,EACPC,WA/BO,SAACW,EAAQC,GACnBA,EAAQrC,MAIbkC,GAAS,SAAAI,GAAI,OAAIA,EAAKT,KAAI,SAAAU,GAAI,OAAKA,EAAK1B,KAAOuB,EAASC,EAAUE,SA2B1Db,WAxBO,SAAAb,GACf,IAAMsB,EAAW,YAAIX,GAAOgB,QAAO,SAAAV,GAAI,OAAIA,EAAKjB,KAAOA,KAEvDqB,EAASC,IAsBDR,aAnBS,SAAAd,GACjB,IAAM4B,EAAejB,EAAMK,KAAI,SAAAC,GAI3B,OAHIA,EAAKjB,KAAOA,IACZiB,EAAKC,YAAcD,EAAKC,YAErBD,KAGXI,EAASO,UC3BFC,MARf,WACE,OACE,qBAAKhC,UAAU,WAAf,SACE,cAAC,EAAD,OCDNiC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.26a0f24d.chunk.js","sourcesContent":["import React, { useLayoutEffect, useRef, useState } from 'react';\r\n\r\nfunction TodoForm(props) {\r\n    const [text, setText] = useState(props.edit ? props.edit.value : '');\r\n    const inputRef = useRef(null);\r\n\r\n    useLayoutEffect(() => {\r\n        inputRef.current.focus();\r\n    });\r\n\r\n    const handleChange = e => {\r\n        setText(e.target.value);\r\n    }\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n        \r\n        props.onSubmit({\r\n            id: Math.floor(Math.random() * 10000),\r\n            text: text\r\n        });\r\n\r\n        setText('');\r\n    }\r\n\r\n    return (\r\n        <form className=\"todo-form\" onSubmit={handleSubmit}>\r\n            {props.edit\r\n                ? (\r\n                    <>\r\n                        <input\r\n                            type=\"text\"\r\n                            placeholder=\"Update your item\"\r\n                            value={text}\r\n                            name=\"text\"\r\n                            className=\"todo-input edit\"\r\n                            onChange={handleChange}\r\n                            ref={inputRef}\r\n                            autoComplete=\"off\"\r\n                        />\r\n                        <button className=\"todo-button edit\">Update</button>\r\n                    </>\r\n                )\r\n                : (\r\n                    <>\r\n                        <input\r\n                            type=\"text\"\r\n                            placeholder=\"Add a todo\"\r\n                            value={text}\r\n                            name=\"text\"\r\n                            className=\"todo-input\"\r\n                            onChange={handleChange}\r\n                            ref={inputRef}\r\n                            autoComplete=\"off\"\r\n                        />\r\n                        <button className=\"todo-button\">Add todo</button>\r\n                    </>\r\n                )}\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default TodoForm;\r\n","import React, { useState } from 'react';\r\nimport TodoForm from './TodoForm';\r\nimport { RiCloseCircleLine } from 'react-icons/ri'\r\nimport { TiEdit } from 'react-icons/ti'\r\n\r\nfunction Todo({ todos, updateTodo, removeTodo, completeTodo }) {\r\n    const [edit, setEdit] = useState({\r\n        id: null,\r\n        value: ''\r\n    });\r\n\r\n    const submitUpdate = value => {\r\n        updateTodo(edit.id, value);\r\n\r\n        setEdit({\r\n            id: null,\r\n            value: ''\r\n        });\r\n    }\r\n\r\n    if (edit.id) {\r\n        return <TodoForm edit={edit} onSubmit={submitUpdate} />\r\n    }\r\n\r\n    return todos.map(todo => (\r\n        <div\r\n            key={todo.id}\r\n            className={todo.isComplete ? 'todo-row complete' : 'todo-row'}\r\n        >\r\n            <div onClick={() => completeTodo(todo.id)}>\r\n                {todo.text}\r\n            </div>\r\n            <div className=\"icons\">\r\n                <RiCloseCircleLine\r\n                    onClick={() => removeTodo(todo.id)}\r\n                    className=\"delete-icon\"\r\n                >\r\n                    Clear\r\n                </RiCloseCircleLine>\r\n                <TiEdit\r\n                    onClick={() => setEdit({ id: todo.id, value: todo.text })}\r\n                    className=\"edit-icon\"\r\n                >\r\n                    Edit\r\n                </TiEdit>\r\n            </div>\r\n        </div>\r\n    ));\r\n}\r\n\r\nexport default Todo;\r\n","import React, { useState } from 'react';\r\nimport Todo from './Todo';\r\nimport TodoForm from './TodoForm';\r\n\r\nfunction TodoList() {\r\n    const [todos, setTodos] = useState([]);\r\n\r\n    const addTodo = todo => {\r\n        if (!todo.text) {\r\n            return;\r\n        }\r\n\r\n        const newTodos = [todo, ...todos];\r\n        setTodos(newTodos);\r\n    }\r\n\r\n    const updateTodo = (todoId, newTodo) => {\r\n        if (!newTodo.text) {\r\n            return;\r\n        }\r\n\r\n        setTodos(prev => prev.map(item => (item.id === todoId ? newTodo : item)));\r\n    }\r\n\r\n    const removeTodo = id => {\r\n        const newTodos = [...todos].filter(todo => todo.id !== id);\r\n\r\n        setTodos(newTodos);\r\n    }\r\n\r\n    const completeTodo = id => {\r\n        const updatedTodos = todos.map(todo => {\r\n            if (todo.id === id) {\r\n                todo.isComplete = !todo.isComplete;\r\n            }\r\n            return todo;\r\n        });\r\n\r\n        setTodos(updatedTodos);\r\n    }\r\n\r\n    return (\r\n        <div className=\"todo-list\">\r\n            <h1>What's the Plan for Today?</h1>\r\n            <TodoForm onSubmit={addTodo} />\r\n            <Todo\r\n                todos={todos}\r\n                updateTodo={updateTodo}\r\n                removeTodo={removeTodo}\r\n                completeTodo={completeTodo}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TodoList;\r\n","import './App.css';\nimport TodoList from './components/TodoList';\n\nfunction App() {\n  return (\n    <div className=\"todo-app\">\n      <TodoList />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}